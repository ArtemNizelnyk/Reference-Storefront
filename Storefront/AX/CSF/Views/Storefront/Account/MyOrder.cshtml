@*//-----------------------------------------------------------------------
    // Copyright 2015 Sitecore Corporation A/S
    // Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
    // except in compliance with the License. You may obtain a copy of the License at
    //       http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software distributed under the
    // License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // either express or implied. See the License for the specific language governing permissions
    // and limitations under the License.
    // -------------------------------------------------------------------------------------------*@

@using Sitecore.Commerce.Entities.Carts
@using Sitecore.Reference.Storefront.Managers
@using Sitecore.Data.Fields
@using System.Linq;
@using System.Linq.Expressions;
@using Sitecore.Commerce.Connect.CommerceServer.Orders.Models
@using Sitecore.Data.Items
@using Sitecore.Reference.Storefront
@using Sitecore.Reference.Storefront.Extensions
@model Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder
@{
    var parties = Model.Parties;
    var shippings = Model.Shipping;
    var shippingAddress = parties.FirstOrDefault() as CommerceParty; //THIS IS A DYNAMICS CONNECTS BUG. IT COULD BE MORE THAN ONE ADDRESS
    var payments = Model.Payment;
    var paymentAddress = payments.FirstOrDefault() != null ? parties.FirstOrDefault(a => (!string.IsNullOrWhiteSpace(a.PartyId) && a.PartyId.Equals(payments.FirstOrDefault().PartyID)) || a.ExternalId.Equals(payments.FirstOrDefault().PartyID)) as CommerceParty : null;
    var total = Model.Total as CommerceTotal;
    var adjustments = Model.Adjustments;
    var lines = Model.Lines;
    var individualShipping = lines.Count > 1 && (shippings == null || shippings.Count == 0);

    var loyaltyRewards = payments.Where(p => p.PartyID.Equals("LoyaltyCard", StringComparison.OrdinalIgnoreCase)).Select(p => p.PaymentMethodID).ToList();
}

<div class="wrap-main-content">
    <div class="row">
        <h2>
            <a href="@StorefrontManager.StorefrontUri("/accountmanagement/myorders")" class="view-all pull-right">
                <span class="glyphicon glyphicon-th-list" aria-hidden="true"></span> @Html.Sitecore().Field("View All Orders Label", Html.Sitecore().CurrentItem)
            </a>
        </h2>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <button type="button" class="btn btn-default" onclick="printPage()"><span class="glyphicon glyphicon-print"></span></button>
                <p class="order-number">
                    <span>
                        @Html.Sitecore().Field("Order Number Label", Html.Sitecore().CurrentItem):
                    </span>
                    <span id="confirm-orderNumber">
                        @Model.TrackingNumber
                    </span>
                </p>
                <p class="order-date">
                    <span>
                        @Html.Sitecore().Field("Order Date Label", Html.Sitecore().CurrentItem):
                    </span>
                    <span id="confirm-orderDate">
                        @Model.Created.ToDisplayedDate()
                    </span>
                </p>
                <p class="order-status">
                    <span>
                        @Html.Sitecore().Field("Order Status Label", Html.Sitecore().CurrentItem):
                    </span>
                    <span id="confirm-orderStatus">
                        @Model.Status
                    </span>
                </p>
            </div>
            <div class="col-md-12">
                <h3>@Html.Sitecore().Field("Your Products Header", Html.Sitecore().CurrentItem)</h3>
            </div>
            <div class="col-md-12">
                <div class="table-responsive" id="confirmProductsContainer">
                    <table class="table table-hover">
                        @foreach (CommerceCartLine cartLine in lines)
                        {
                            var product = cartLine.Product as CommerceCartProduct;
                            if (product == null)
                            {
                                continue;
                            }

                            var lineTotal = cartLine.Total;
                            var savings = ((CommerceTotal)lineTotal).LineItemDiscountAmount;
                            var lineShippingAddress = cartLine.Properties["ShippingAddress"] as CommerceParty;
                            var email = cartLine.Properties["ElectronicDeliveryEmail"] as string;
                            var image = string.Empty;
                            var images = cartLine.Properties["Images"] as string;
                            if (images != null)
                            {
                                MediaItem imageItem = Sitecore.Context.Database.GetItem(images.Split('|')[0]);
                                image = imageItem.GetImageUrl(110, 110);
                            }

                            var isGiftCard = product.ProductId == StorefrontManager.CurrentStorefront.GiftCardProductId;
                            var productUrl = isGiftCard ? StorefrontManager.StorefrontUri("/buygiftcard") : StorefrontManager.StorefrontUri("/product/" + product.ProductId);
                            var offers = cartLine.GetPropertyValue("OfferNames") as string;
                            <tr>
                                <td class="cart-image hidden-sm hidden-xs"><img src="@image" class="img-responsive" alt="a" pid="image" /></td>
                                <td class="cart-info">
                                    <a pid="link " href="@productUrl"><h5 pid="displayName">@product.DisplayName</h5></a>
                                    @if (!string.IsNullOrEmpty(product.Properties["Color"] as string))
                                    {
                                        <p class="cart-variable">
                                            <span>
                                                @Html.Sitecore().Field("Color Label", Html.Sitecore().CurrentItem):
                                            </span>
                                            <span pid="color">
                                                @product.Properties["Color"]
                                            </span>
                                        </p>
                                    }
                                    <p class="cart-delivery">
                                        <span>
                                            @Html.Sitecore().Field("Delivery Label", Html.Sitecore().CurrentItem):
                                        </span>
                                        <span pid="shippingMethodName">
                                            @cartLine.ShippingMethodName
                                        </span>
                                    </p>
                                    @if (individualShipping && lineShippingAddress != null)
                                    {
                                        <div class="cart-delivery">
                                            <ul pid="lineShippingAddress">
                                                <li pid="lineShippingAddressName">@lineShippingAddress.Name</li>
                                                <li>
                                                    <span pid="lineShippingAddressLine">
                                                        @lineShippingAddress.Address1,
                                                    </span>
                                                    <span pid="lineShippingAddressCity">
                                                        @lineShippingAddress.City
                                                    </span>
                                                </li>
                                                <li>
                                                    <span pid="lineShippingAddressState">@lineShippingAddress.State, </span>
                                                    <span pid="lineShippingAddressZipCode">@lineShippingAddress.ZipPostalCode</span>
                                                </li>
                                                <li pid="lineShippingAddressCountry">@lineShippingAddress.Country</li>
                                            </ul>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(email))
                                    {
                                        <p class="cart-email" pid="lineEmail">@email</p>
                                    }
                                </td>
                                <td class="cart-price">
                                    <p pid="price">@product.Price.Amount.ToCurrency(StorefrontConstants.Settings.DefaultCurrencyCode)</p>
                                    @if (!string.IsNullOrEmpty(offers))
                                    {
                                        <span>
                                            <span>@Html.Sitecore().Field("Discount Label", Html.Sitecore().CurrentItem): </span>
                                            <span pid="discountNames" class="savings">@offers</span>
                                        </span>
                                    }
                                </td>
                                <td class="cart-quantity text-center" style="width: 10%;" pid="quantity">@cartLine.Quantity</td>
                                <td class="cart-total">
                                    <p pid="total">@lineTotal.Amount.ToCurrency(StorefrontConstants.Settings.DefaultCurrencyCode)</p>
                                    @if (savings > 0)
                                    {
                                        <span class="savings">
                                            <span>@Html.Sitecore().Field("Savings Label", Html.Sitecore().CurrentItem) </span>
                                            <span pid="discount">@savings.ToCurrency(StorefrontConstants.Settings.DefaultCurrencyCode)</span>
                                        </span>
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
            <div class="col-md-12">
                <h3>@Html.Sitecore().Field("Loyalty Rewards Header", Html.Sitecore().CurrentItem)</h3>
            </div>
            @*THIS IS A DYNAMICS CONNECTS BUG. DISCOUNT CODES AND LOYALTY REWARDS SHOULD NOT BE IN PAYMENTS COLLECTION*@
            @if (payments != null && payments.Count > 0)
            {
                foreach (PaymentInfo payment in payments)
                {
                    if (!payment.PartyID.Equals("Discount", StringComparison.OrdinalIgnoreCase))
                    {
                        continue;
                    }

                    foreach (var line in payment.LineIDs)
                    {
                        <div class="col-md-12">
                            <div class="giftcard-reciept">
                                <span>@Html.Sitecore().Field("Promotion Codes Label", Html.Sitecore().CurrentItem):</span>
                                <span>@line</span>
                            </div>
                        </div>
                    }
                }

                <div class="col-md-12">
                    @foreach (string lr in loyaltyRewards)
                    {
                        <div class="giftcard-reciept">
                            <span>@Html.Sitecore().Field("Loyalty Card Label", Html.Sitecore().CurrentItem):</span>
                            <span pid="loyaltyCardNumber">@lr</span>
                        </div>
                    }
                </div>
            }
            <div class="col-md-12">
                <h3>@Html.Sitecore().Field("Order Total Label", Html.Sitecore().CurrentItem)</h3>
            </div>
            <div id="confirmTotalSummaryContainer">
                <div class="col-md-12">
                    <div class="col-md-12 summary">
                        <span class="text">@Html.Sitecore().Field("Subtotal Label", Html.Sitecore().CurrentItem):</span>
                        <span class="amount" pid="subtotal" id="confirm-subtotal">@total.Subtotal.ToCurrency(StorefrontConstants.Settings.DefaultCurrencyCode)</span>
                    </div>
                    <div class="col-md-12 summary">
                        <span class="text">@Html.Sitecore().Field("Shipping Total Label", Html.Sitecore().CurrentItem):</span>
                        <span class="amount" pid="shippingTotal" id="confirm-shippingTotal">@total.ShippingTotal.ToCurrency(StorefrontConstants.Settings.DefaultCurrencyCode)</span>
                    </div>
                    <div class="col-md-12 summary">
                        <span class="text">@Html.Sitecore().Field("Tax Total Label", Html.Sitecore().CurrentItem):</span>
                        <span class="amount" pid="taxTotal" id="confirm-taxTotal">@total.TaxTotal.Amount.ToCurrency(StorefrontConstants.Settings.DefaultCurrencyCode)</span>
                    </div>
                    <div class="col-md-12 summary">
                        <span class="text">@Html.Sitecore().Field("Savings Label", Html.Sitecore().CurrentItem):</span>
                        <span class="amount" pid="discountTotal" id="confirm-discountTotal">@total.OrderLevelDiscountAmount.ToCurrency(StorefrontConstants.Settings.DefaultCurrencyCode)</span>
                    </div>
                    <div class="col-md-12 total">
                        <span class="text">@Html.Sitecore().Field("Order total Label", Html.Sitecore().CurrentItem):</span>
                        <span class="amount" pid="total" id="confirm-total">@total.Amount.ToCurrency(StorefrontConstants.Settings.DefaultCurrencyCode)</span>
                    </div>
                </div>
            </div>
            <div class="col-md-12 checkout-footer">
                <div>
                    @if (shippingAddress != null)
                    {
                        <div class="col-md-2 col-sm-6 col-xs-6" id="confirm-shippingAddressContainer">
                            <div class="footer-shipping">
                                <h4>@Html.Sitecore().Field("Shipping address Label", Html.Sitecore().CurrentItem)</h4>
                                <ul>
                                    <li id="confirm-shippingAddressName">@shippingAddress.Name</li>
                                    <li id="confirm-shippingAddressLine">@shippingAddress.Address1</li>
                                    <li>
                                        <span id="confirm-shippingAddressCity">@shippingAddress.City, </span>
                                        <span id="confirm-shippingAddressState">@shippingAddress.State, </span>
                                        <span id="confirm-shippingAddressCountry">@shippingAddress.Country</span>
                                    </li>
                                    <li id="confirm-shippingAddressZipCode">@shippingAddress.ZipPostalCode</li>
                                </ul>
                            </div>
                        </div>
                    }
                    @if (paymentAddress != null)
                    {
                        <div class="col-md-2 col-sm-6 col-xs-6" id="confirm-billingAddressContainer">
                            <div class="footer-billing">
                                <h4>@Html.Sitecore().Field("Billing address Label", Html.Sitecore().CurrentItem)</h4>
                                <ul>
                                    <li id="confirm-billingAddressName">@paymentAddress.Name</li>
                                    <li id="confirm-billingAddressLine">@paymentAddress.Address1</li>
                                    <li>
                                        <span id="confirm-billingAddressCity">@paymentAddress.City, </span>
                                        <span id="confirm-billingAddressState">@paymentAddress.State, </span>
                                        <span id="confirm-billingAddressCountry">@paymentAddress.Country</span>
                                    </li>
                                    <li id="confirm-billingAddressZipCode">@paymentAddress.ZipPostalCode</li>
                                </ul>
                            </div>
                        </div>
                    }
                    @*THIS IS A DYNAMICS CONNECTS BUG. DISCOUNT CODES AND LOYALTY REWARDS SHOULD NOT BE IN PAYMENTS COLLECTION*@
                        @*@if (payments != null && payments.Count > 0)
                            {
                                <div class="col-md-2 col-sm-6 col-xs-6">
                                    <div class="footer-payment" id="confirm-paymentMethodsContainer">
                                        <h4>@Html.Sitecore().Field("Payments Label", Html.Sitecore().CurrentItem)</h4>
                                        <ul>
                                            @foreach (PaymentInfo paymentInfo in payments)
                                            {
                                                <li><a href="#">@paymentInfo.PaymentMethodID</a></li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            }*@
                    </div>
                </div>
            </div>
        </div>
    </div>